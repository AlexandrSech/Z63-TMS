from flask import Flask, request

app = Flask(__name__)
app.secret_key = b"\xcf\xb1\xbf\x92\x81\xbc\xbe\x9aB\xe0X\xdb$\xb0\x01\xffz0\x96\xdb\xb7\x05"

questions = {
    "1": "",    # укажите команду в терминале для навигации по файловой системе
    "2": "",    # Укажите команду в терминале для того, чтобы узнать в какой директории сейчас вы находитесь
    "3": "",    # Укажите команду в терминале для создания папки
    "4": "",    # Укажите команду в терминале для создания файла
    "5": "",    # Укажите команду в терминале для вывода списка всех файлов и папок в текущей директории
    "6": "",    # Какой тип данных нужен для работами с целыми числами
    "7": "",    # Какой тип данных нужен для работами с дробными числами
    "8": "",    # Какой тип данных нужен для работами со строками
    "9": "",    # Какой тип данных нужен для работами с булевыми значениями
    "10": "",   # Какой оператор нужно использовать чтобы возвести число в степень
    "11": "",   # Какой оператор отвечает за целочисленные деление
    "12": "",   # Какой оператор отвечает за остаток от деления
    "13": "",   # Какой метод разделит нашу строку по указанному разделителю
    "14": "",   # Какой метод поможет нам вставлять в готовую строку в нужных местах значения переменных
    "15": "",   # Какой метод заменит указанные нами символы/подстроки на новые символы/подстроки
    "16": "",   # Что возвращают методы из предыдущих двух вопросов (ничего, строку)
    "17": "",   # Какой метод добавляет в нашу последовательность, например список, новый элемент
    "18": "",   # Какой стандартный метод нужен для получения последовательности чисел
    "19": "",   # Как узнать длину любого контейнера
    "20": "",   # Какой тип данных вернут функция из предыдущего вопроса
    "21": "",   # Какой метод возващает либо значение по ключу, либо стандартное значение в словарях
    "22": "",   # Что вернет 12 < 1
    "23": "",   # Что вернет 3 + 3 ** 3
    "24": "",   # Что вернет в if [] - True или False
    "25": "",   # Какой тип данных вернет splitlines()
    "26": "",   # Что вернет if range(10) - True или False
    "27": "",   # Какой оператор пропускает текущий шаг в цикле
    "28": "",   # Какой оператор останавливает цикл
    "29": "",   # Каким оператором возвращается значение из функции
    "30": "",   # Какой оператор не делает ничего
    "31": "",   # Какой из этих конструкций не содержит блока else: def, if, for, while, with, class
    "32": "",   # Какой метод является конструктором класса
    "33": "",   # Какой метод является деструктором класса
    "34": "",   # Какой метод вернет чтото из класса как строку
    "35": "",   # Какой символ используют для пометки что функция задекорирована
}
answers_template = {"student_name": "", "answers": questions}
coreect_answers = {
    "1": "cd",    # укажите команду в терминале для навигации по файловой системе
    "2": "pwd",    # Укажите команду в терминале для того, чтобы узнать в какой директории сейчас вы находитесь
    "3": "mkdir",    # Укажите команду в терминале для создания папки
    "4": "touch",    # Укажите команду в терминале для создания файла
    "5": "ls",    # Укажите команду в терминале для вывода списка всех файлов и папок в текущей директории
    "6": "int",    # Какой тип данных нужен для работами с целыми числами
    "7": "float",    # Какой тип данных нужен для работами с дробными числами
    "8": "str",    # Какой тип данных нужен для работами со строками
    "9": "bool",    # Какой тип данных нужен для работами с булевыми значениями
    "10": "**",   # Какой оператор нужно использовать чтобы возвести число в степень
    "11": "//",   # Какой оператор отвечает за целочисленные деление
    "12": "%",   # Какой оператор отвечает за остаток от деления
    "13": "split",   # Какой метод разделит нашу строку по указанному разделителю
    "14": "format",   # Какой метод поможет нам вставлять в готовую строку в нужных местах значения переменных
    "15": "replace",   # Какой метод заменит указанные нами символы/подстроки на новые символы/подстроки
    "16": "str",   # Что возвращают методы из предыдущих двух вопросов (ничего, строку)
    "17": "append",   # Какой метод добавляет в нашу последовательность, например список, новый элемент
    "18": "range",   # Какой стандартный метод нужен для получения последовательности чисел
    "19": "len",   # Как узнать длину любого контейнера
    "20": "int",   # Какой тип данных вернут функция из предыдущего вопроса
    "21": "get",   # Какой метод возващает либо значение по ключу, либо стандартное значение в словарях
    "22": "False",   # Что вернет 12 < 1
    "23": "30",   # Что вернет 3 + 3 ** 3
    "24": "False",   # Что вернет в if [] - True или False
    "25": "list",   # Какой тип данных вернет splitlines()
    "26": "True",   # Что вернет if range(10) - True или False
    "27": "continue",   # Какой оператор пропускает текущий шаг в цикле
    "28": "break",   # Какой оператор останавливает цикл
    "29": "return",   # Каким оператором возвращается значение из функции
    "30": "pass",   # Какой оператор не делает ничего
    "31": "class",   # Какой из этих конструкций не содержит блока else: def, if, for, while, with, class
    "32": "__init__",   # Какой метод является конструктором класса
    "33": "__del__",   # Какой метод является деструктором класса
    "34": "__str__",   # Какой метод вернет чтото из класса как строку
    "35": "@",   # Какой символ используют для пометки что функция задекорирована
}


@app.route("/")
def index():
    return "hello"


@app.route("/get_template")
def get_template():
    return answers_template


@app.route("/check", methods=["POST"])
def check():
    if request.method == "POST":
        j = request.json
        print(j, type(j))

        rate = 35
        for k, v in j["answers"].items():
            if j["answers"][k] != coreect_answers[k]:
                j["answers"][k] = {"your answer": v, "correct answer": coreect_answers[k]}
                rate -= 1
        j["rate"] = "{}/35 or {}%".format(rate, rate*100/35)
        return j
    return ""


if __name__ == "__main__":
    app.run("127.0.0.1", 5555)
