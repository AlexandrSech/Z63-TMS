import requests
from json import loads

# это урл с тестом
# по гет запросу ты получаешь json для теста
url = "http://johnray.pythonanywhere.com/"

# get запрос для шаблона теста
r = requests.get(url + "get_template")
print(r.text)

# преобразуем в словарь
answers = loads(r.text)

# создаем свой словарь в который ручками заполняем ответы
a = {
    "1": "",    # укажите команду в терминале для навигации по файловой системе
    "2": "",    # Укажите команду в терминале для того, чтобы узнать в какой директории сейчас вы находитесь
    "3": "",    # Укажите команду в терминале для создания папки
    "4": "",    # Укажите команду в терминале для создания файла
    "5": "",    # Укажите команду в терминале для вывода списка всех файлов и папок в текущей директории
    "6": "",    # Какой тип данных нужен для работами с целыми числами
    "7": "",    # Какой тип данных нужен для работами с дробными числами
    "8": "",    # Какой тип данных нужен для работами со строками
    "9": "",    # Какой тип данных нужен для работами с булевыми значениями
    "10": "",   # Какой оператор нужно использовать чтобы возвести число в степень
    "11": "",   # Какой оператор отвечает за целочисленные деление
    "12": "",   # Какой оператор отвечает за остаток от деления
    "13": "",   # Какой метод разделит нашу строку по указанному разделителю
    "14": "",   # Какой метод поможет нам вставлять в готовую строку в нужных местах значения переменных
    "15": "",   # Какой метод заменит указанные нами символы/подстроки на новые символы/подстроки
    "16": "",   # Что возвращают методы из предыдущих двух вопросов (ничего, строку)
    "17": "",   # Какой метод добавляет в нашу последовательность, например список, новый элемент
    "18": "",   # Какой стандартный метод нужен для получения последовательности чисел
    "19": "",   # Как узнать длину любого контейнера
    "20": "",   # Какой тип данных вернут функция из предыдущего вопроса
    "21": "",   # Какой метод возващает либо значение по ключу, либо стандартное значение в словарях
    "22": "",   # Что вернет 12 < 1
    "23": "",   # Что вернет 3 + 3 ** 3
    "24": "",   # Что вернет в if [] - True или False
    "25": "",   # Какой тип данных вернет splitlines()
    "26": "",   # Что вернет if range(10) - True или False
    "27": "",   # Какой оператор пропускает текущий шаг в цикле
    "28": "",   # Какой оператор останавливает цикл
    "29": "",   # Каким оператором возвращается значение из функции
    "30": "",   # Какой оператор не делает ничего
    "31": "",   # Какой из этих конструкций не содержит блока else: def, if, for, while, with, class
    "32": "",   # Какой метод является конструктором класса
    "33": "",   # Какой метод является деструктором класса
    "34": "",   # Какой метод вернет чтото из класса как строку
    "35": "",   # Какой символ используют для пометки что функция задекорирована
}

# все это забиваем в исходный словарь
answers["student_name"] = "alex"
answers["answers"] = a

# и отправляем полученый словарь с ответами и получаем ответ че сколько и как мы понаотвечали
r = requests.post(url + "check", json=answers)
print(r.text)
